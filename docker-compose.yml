version: '3.8'

#
# Stack do Portainer para a aplicação RED-BOT
#

services:
  redbot:
    # Constrói a imagem a partir do Dockerfile local
    build: .
    container_name: redbot-app
    
    # Mapeia a porta da aplicação para a porta do host
    ports:
      - "7860:7860"
      
    # Política de reinício para garantir que o container volte a funcionar
    restart: unless-stopped
    
    # Variáveis de ambiente
    # IMPORTANTE: Substitua 'SUA_CHAVE_API' pela sua chave do OpenRouter
    environment:
      - OPENROUTER_API_KEY=SUA_CHAVE_API
      # Configurações de performance
      - PYTHONUNBUFFERED=1
      - PYTHONOPTIMIZE=1
      # Configurações de cache e conexões
      - CACHE_MAXSIZE=100
      - HTTP_CONNECTION_POOL_SIZE=10
      - HTTP_TIMEOUT=30
      
    # Limites de recursos otimizados para performance
    # Configurado para suportar operações assíncronas e cache
    deploy:
      resources:
        limits:
          cpus: '2.0' # Aumentado para suportar operações assíncronas
          memory: '2G' # Aumentado para cache e operações paralelas
        reservations:
          cpus: '0.5'
          memory: '512M'

    # Labels para organização e metadados no Portainer
    labels:
      - "com.portainer.stack.name=red-bot-stack"
      - "com.portainer.stack.description=Assistente de Red Team e Ethical Hacking com Otimizações de Performance"
      - "com.portainer.stack.version=2.0-performance-optimized"
      - "io.portainer.access.control.public=true" # Opcional: torna o stack visível a todos os usuários do Portainer
      - "diun.enable=true" # Opcional: para monitoramento de atualização de imagem com Diun

# Define uma rede isolada para a aplicação
networks:
  default:
    name: redbot-net
